{"code":"// Import here Polyfills if needed. Recommended core-js (npm i -D core-js)\r\n// import \"core-js/fn/array.find\"\r\n// ...\r\n// export default class DummyClass {\r\n// }\r\nvar Logger = /** @class */ (function () {\r\n    function Logger(mode) {\r\n        if (mode === void 0) { mode = LoggerMode.Console; }\r\n        this.mode = mode;\r\n        switch (this.mode) {\r\n            case LoggerMode.Console:\r\n                this.writer = function (msg) { return console.log(msg); };\r\n                break;\r\n            case LoggerMode.Alert:\r\n                this.writer = function (msg) { return alert(msg); };\r\n                break;\r\n        }\r\n    }\r\n    Logger.prototype.write = function (msg) {\r\n        this.writer(msg);\r\n    };\r\n    ;\r\n    return Logger;\r\n}());\r\nexport default Logger;\r\nexport var LoggerMode = {\r\n    Console: 1,\r\n    Alert: 2,\r\n    Toastr: 3\r\n};\r\n// namespace App {\r\n//   export var LoggerMode = {\r\n//       Console: 1,\r\n//       Alert: 2,\r\n//       Toastr: 3\r\n//   }\r\n//   export namespace Utils {\r\n//       export interface ILogger {\r\n//           write: (msg: string) => void;\r\n//       }\r\n//       export class Logger implements ILogger {\r\n//           private writer: any;\r\n//           constructor (public mode: number = LoggerMode.Console) {\r\n//               switch (this.mode) {\r\n//                   case LoggerMode.Console:\r\n//                       this.writer = (msg: string) => console.log(msg);\r\n//                       break;\r\n//                   case LoggerMode.Alert:\r\n//                       this.writer = (msg: string) => alert(msg);\r\n//                       break;\r\n//                   case LoggerMode.Toastr:\r\n//                       this.writer = (msg: string) => toastr.info(msg);\r\n//                       break;\r\n//               }\r\n//           }\r\n//           write(msg) {\r\n//               this.writer(msg);\r\n//           };\r\n//       }\r\n//   }\r\n// } \r\n//# sourceMappingURL=testlib.js.map","map":{"version":3,"file":"testlib.js","sourceRoot":"","sources":["src/testlib.ts"],"names":[],"mappings":"AAAA,0EAA0E;AACxE,iCAAiC;AACjC,MAAM;AACR,oCAAoC;AAEpC,IAAI;AAEJ;IAGE,gBAAoB,IAAiC;QAAjC,qBAAA,EAAA,OAAe,UAAU,CAAC,OAAO;QAAjC,SAAI,GAAJ,IAAI,CAA6B;QACjD,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAChB,KAAK,UAAU,CAAC,OAAO;gBACnB,IAAI,CAAC,MAAM,GAAG,UAAC,GAAW,IAAK,OAAA,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC;gBAChD,KAAK,CAAC;YACV,KAAK,UAAU,CAAC,KAAK;gBACjB,IAAI,CAAC,MAAM,GAAG,UAAC,GAAW,IAAK,OAAA,KAAK,CAAC,GAAG,CAAC,EAAV,CAAU,CAAC;gBAC1C,KAAK,CAAC;QAId,CAAC;IACL,CAAC;IACD,sBAAK,GAAL,UAAM,GAAW;QACb,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IAAA,CAAC;IACJ,aAAC;AAAD,CAAC,AAnBD,IAmBC;;AAED,MAAM,CAAC,IAAI,UAAU,GAAG;IACtB,OAAO,EAAE,CAAC;IACV,KAAK,EAAE,CAAC;IACR,MAAM,EAAE,CAAC;CACV,CAAA;AAMD,kBAAkB;AAClB,8BAA8B;AAC9B,oBAAoB;AACpB,kBAAkB;AAClB,kBAAkB;AAClB,MAAM;AAEN,6BAA6B;AAC7B,mCAAmC;AACnC,0CAA0C;AAC1C,UAAU;AAEV,iDAAiD;AACjD,iCAAiC;AAEjC,qEAAqE;AACrE,qCAAqC;AACrC,6CAA6C;AAC7C,yEAAyE;AACzE,+BAA+B;AAC/B,2CAA2C;AAC3C,mEAAmE;AACnE,+BAA+B;AAC/B,4CAA4C;AAC5C,yEAAyE;AACzE,+BAA+B;AAC/B,kBAAkB;AAClB,cAAc;AACd,yBAAyB;AACzB,kCAAkC;AAClC,eAAe;AACf,UAAU;AACV,MAAM;AACN,IAAI"},"dts":{"name":"/Users/johnhaigh/Projects/typescriptlib/testlib/testlib.d.ts","text":"export default class Logger implements ILogger {\r\n    mode: number;\r\n    private writer;\r\n    constructor(mode?: number);\r\n    write(msg: string): void;\r\n}\r\nexport declare var LoggerMode: {\r\n    Console: number;\r\n    Alert: number;\r\n    Toastr: number;\r\n};\r\nexport interface ILogger {\r\n    write: (msg: string) => void;\r\n}\r\n"}}
